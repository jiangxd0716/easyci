<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyci.ci.dao.GitlabTokenMapper">
  <resultMap id="BaseResultMap" type="com.easyci.ci.entity.GitlabToken">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="giturl" jdbcType="VARCHAR" property="giturl" />
    <result column="access_token" jdbcType="VARCHAR" property="access_token" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, giturl, access_token
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gitlab_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="select" resultMap="BaseResultMap">
    select * from gitlab_token
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from gitlab_token
    where username = #{username}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gitlab_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.easyci.ci.entity.GitlabToken">
    insert into gitlab_token (id, username, password, 
      giturl, access_token)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{giturl,jdbcType=VARCHAR}, #{access_token,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.easyci.ci.entity.GitlabToken">
    insert into gitlab_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="giturl != null">
        giturl,
      </if>
      <if test="access_token != null">
        access_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="giturl != null">
        #{giturl,jdbcType=VARCHAR},
      </if>
      <if test="access_token != null">
        #{access_token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.easyci.ci.entity.GitlabToken">
    update gitlab_token
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="giturl != null">
        giturl = #{giturl,jdbcType=VARCHAR},
      </if>
      <if test="access_token != null">
        access_token = #{access_token,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.easyci.ci.entity.GitlabToken">
    update gitlab_token
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      giturl = #{giturl,jdbcType=VARCHAR},
      access_token = #{access_token,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>